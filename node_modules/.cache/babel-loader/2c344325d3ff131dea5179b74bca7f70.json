{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _classCallCheck from\"/Users/felipeferreira/Documents/00 - coding/homework/ResponsiveContacts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/felipeferreira/Documents/00 - coding/homework/ResponsiveContacts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/felipeferreira/Documents/00 - coding/homework/ResponsiveContacts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/felipeferreira/Documents/00 - coding/homework/ResponsiveContacts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import API from\"../utils/API\";import Container from\"../components/Container\";import SearchResults from\"../components/SearchResults\";import SearchForm from\"../components/SearchForm\";var Search=/*#__PURE__*/function(_Component){_inherits(Search,_Component);var _super=_createSuper(Search);function Search(){var _this;_classCallCheck(this,Search);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={search:\"\",contact:[],results:[]};_this.handleInputChange=function(event){var value=event.target.value;var storedContacts=JSON.parse(localStorage.getItem(\"Contacts\"));var filteredContacts=storedContacts.filter(function(letter){return letter.name.includes(value);});_this.setState({results:filteredContacts});};return _this;}_createClass(Search,[{key:\"componentDidMount\",//checking if the contacts was retrieved from the api, if not, call the api and store in local storage\nvalue:function componentDidMount(){var _this2=this;var storedContacts=JSON.parse(localStorage.getItem(\"Contacts\"));if(storedContacts!=null){this.setState({results:storedContacts});}else{API.getContacts().then(function(res){console.log(res.data);_this2.setState({results:res.data});localStorage.setItem(\"Contacts\",JSON.stringify(res.data));}).catch(function(err){return console.log(err);});}}//filter contacts\n},{key:\"render\",//Sort Contactds\n// sortContacts = () => {\n//   let storedContacts = JSON.parse(localStorage.getItem(\"Contacts\"));\n//   const sorted = storedContacts.sort(function(a, b) {\n//       if(a.name.toLowerCase() < b.name.toLowerCase()) return -1;\n//       if(a.name.toLowerCase() > b.name.toLowerCase()) return 1;\n//       return 0;\n//      })\n//   this.setState({ results: sorted });\n// }\n//Render on the screen\nvalue:function render(){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(Container,{style:{minHeight:\"80%\"},children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-center\",children:\"My Contacts\"}),/*#__PURE__*/_jsx(SearchForm,{handleInputChange:this.handleInputChange,contact:this.state.contact}),/*#__PURE__*/_jsx(SearchResults,{results:this.state.results})]})});}}]);return Search;}(Component);export default Search;","map":{"version":3,"sources":["/Users/felipeferreira/Documents/00 - coding/homework/ResponsiveContacts/src/pages/Contacts.js"],"names":["React","Component","API","Container","SearchResults","SearchForm","Search","state","search","contact","results","handleInputChange","event","value","target","storedContacts","JSON","parse","localStorage","getItem","filteredContacts","filter","letter","name","includes","setState","getContacts","then","res","console","log","data","setItem","stringify","catch","err","minHeight"],"mappings":"g0BAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,GAAP,KAAgB,cAAhB,CACA,MAAOC,CAAAA,SAAP,KAAsB,yBAAtB,CACA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,CACA,MAAOC,CAAAA,UAAP,KAAuB,0BAAvB,C,GAEMC,CAAAA,M,2TACJC,K,CAAQ,CACNC,MAAM,CAAE,EADF,CAENC,OAAO,CAAE,EAFH,CAGNC,OAAO,CAAE,EAHH,C,OAsBRC,iB,CAAoB,SAAAC,KAAK,CAAI,CAC3B,GAAMC,CAAAA,KAAK,CAAGD,KAAK,CAACE,MAAN,CAAaD,KAA3B,CACA,GAAIE,CAAAA,cAAc,CAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAArB,CACA,GAAIC,CAAAA,gBAAgB,CAAGL,cAAc,CAACM,MAAf,CAAsB,SAAAC,MAAM,QAAIA,CAAAA,MAAM,CAACC,IAAP,CAAYC,QAAZ,CAAqBX,KAArB,CAAJ,EAA5B,CAAvB,CACA,MAAKY,QAAL,CAAc,CAAEf,OAAO,CAAEU,gBAAX,CAAd,EACD,C,6DAtBH;kCACsB,iBAClB,GAAIL,CAAAA,cAAc,CAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAArB,CACA,GAAIJ,cAAc,EAAI,IAAtB,CAA4B,CACxB,KAAKU,QAAL,CAAc,CAAEf,OAAO,CAAEK,cAAX,CAAd,EACH,CAFD,IAGI,CACAb,GAAG,CAACwB,WAAJ,GACCC,IADD,CACM,SAAAC,GAAG,CAAI,CACbC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB,EACA,MAAI,CAACN,QAAL,CAAc,CAAEf,OAAO,CAAEkB,GAAG,CAACG,IAAf,CAAd,EACAb,YAAY,CAACc,OAAb,CAAqB,UAArB,CAAiChB,IAAI,CAACiB,SAAL,CAAeL,GAAG,CAACG,IAAnB,CAAjC,EACC,CALD,EAMCG,KAND,CAMO,SAAAC,GAAG,QAAIN,CAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ,CAAJ,EANV,EAMiC,CACtC,CAED;gBAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIF;uBACW,CACP,mBACE,kCACE,MAAC,SAAD,EAAW,KAAK,CAAE,CAAEC,SAAS,CAAE,KAAb,CAAlB,wBACE,WAAI,SAAS,CAAC,aAAd,yBADF,cAEE,KAAC,UAAD,EACE,iBAAiB,CAAE,KAAKzB,iBAD1B,CAEE,OAAO,CAAE,KAAKJ,KAAL,CAAWE,OAFtB,EAFF,cAOI,KAAC,aAAD,EAAe,OAAO,CAAE,KAAKF,KAAL,CAAWG,OAAnC,EAPJ,GADF,EADF,CAaD,C,oBA1DkBT,S,EA6DrB,cAAeK,CAAAA,MAAf","sourcesContent":["import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport Container from \"../components/Container\";\nimport SearchResults from \"../components/SearchResults\";\nimport SearchForm from \"../components/SearchForm\";\n\nclass Search extends Component {\n  state = {\n    search: \"\",\n    contact: [],\n    results: [],\n  };\n//checking if the contacts was retrieved from the api, if not, call the api and store in local storage\n  componentDidMount() {\n    let storedContacts = JSON.parse(localStorage.getItem(\"Contacts\"));\n    if (storedContacts != null) {\n        this.setState({ results: storedContacts })\n    }\n    else{\n        API.getContacts()\n        .then(res => {\n        console.log(res.data)\n        this.setState({ results: res.data })\n        localStorage.setItem(\"Contacts\", JSON.stringify(res.data))\n        })\n        .catch(err => console.log(err));}\n  }\n\n  //filter contacts\n  handleInputChange = event => {\n    const value = event.target.value;\n    let storedContacts = JSON.parse(localStorage.getItem(\"Contacts\"));\n    let filteredContacts = storedContacts.filter(letter => letter.name.includes(value))\n    this.setState({ results: filteredContacts });\n  };\n\n  //Sort Contactds\n  // sortContacts = () => {\n  //   let storedContacts = JSON.parse(localStorage.getItem(\"Contacts\"));\n  //   const sorted = storedContacts.sort(function(a, b) {\n  //       if(a.name.toLowerCase() < b.name.toLowerCase()) return -1;\n  //       if(a.name.toLowerCase() > b.name.toLowerCase()) return 1;\n  //       return 0;\n  //      })\n  //   this.setState({ results: sorted });\n  // }\n\n\n  \n//Render on the screen\n  render() {\n    return (\n      <div>\n        <Container style={{ minHeight: \"80%\" }}>\n          <h1 className=\"text-center\">My Contacts</h1>\n          <SearchForm\n            handleInputChange={this.handleInputChange}\n            contact={this.state.contact}\n          />\n          {/* <button type=\"button\" class=\"btn btn-dark\" onClick={event => {event.preventDefault(); this.sortContacts();}}>Order by Name</button> */}\n            <SearchResults results={this.state.results}/>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}