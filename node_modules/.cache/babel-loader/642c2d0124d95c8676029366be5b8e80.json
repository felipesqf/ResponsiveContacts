{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/felipeferreira/Documents/00 - coding/Employee-Directory/empdir/src/pages/Employees.js\";\nimport React, { Component, useEffect, useState } from \"react\";\nimport API from \"../utils/API\";\nimport Container from \"../components/Container\";\nimport SearchResults from \"../components/SearchResults\";\nimport SearchForm from \"../components/SearchForm\";\n\nclass Search extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      search: \"\",\n      employee: [],\n      results: []\n    };\n\n    this.handleInputChange = event => {\n      const value = event.target.value;\n      let storedEmployees = JSON.parse(localStorage.getItem(\"Employees\"));\n      let filteredEmployees = storedEmployees.filter(letter => letter.name.first.includes(value));\n      this.setState({\n        results: filteredEmployees\n      });\n    };\n\n    this.sortEmployees = (a, b) => {\n      let storedEmployees = JSON.parse(localStorage.getItem(\"Employees\"));\n      const sorted = storedEmployees.sort((a, b) => b[storedEmployees.name.first] - a[storedEmployees.name.first]);\n      console.log(sorted);\n      this.setState({\n        results: sorted\n      }); // const nameA = a.name.first.toUpperCase();\n      // const nameB = b.name.first.toUpperCase();\n      // let comparison = 0;\n      // if (nameA > nameB) {\n      // comparison = 1;\n      // } else if (nameA < nameB) {\n      // comparison = -1; \n      // }\n      // console.log(comparison)\n      // return comparison;\n    };\n  }\n\n  componentDidMount() {\n    let storedEmployees = JSON.parse(localStorage.getItem(\"Employees\"));\n\n    if (storedEmployees != null) {\n      this.setState({\n        results: storedEmployees\n      });\n    } else {\n      API.getEmployees().then(res => {\n        this.setState({\n          results: res.data.results\n        });\n        localStorage.setItem(\"Employees\", JSON.stringify(res.data.results));\n      }).catch(err => console.log(err));\n    }\n  }\n\n  // toggleSortFirstName = () =>{\n  //     let newEmployeeList = JSON.parse(localStorage.getItem(\"Employees\"));\n  //     console.log(newEmployeeList)\n  //     this.setState({\n  //         employeeListChanges: newEmployeeList.sort((a, b) => a.name.first > b.name.first)\n  //     })\n  //     localStorage.setItem(\"Employees\", JSON.stringify(newEmployeeList))\n  // }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        style: {\n          minHeight: \"80%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center\",\n          children: \"Employee Directory!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SearchForm, {\n          handleInputChange: this.handleInputChange,\n          employee: this.state.employee\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Photo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: event => {\n              event.preventDefault();\n              this.sortEmployees('first');\n            },\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Gender\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SearchResults, {\n          results: this.state.results\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/felipeferreira/Documents/00 - coding/Employee-Directory/empdir/src/pages/Employees.js"],"names":["React","Component","useEffect","useState","API","Container","SearchResults","SearchForm","Search","state","search","employee","results","handleInputChange","event","value","target","storedEmployees","JSON","parse","localStorage","getItem","filteredEmployees","filter","letter","name","first","includes","setState","sortEmployees","a","b","sorted","sort","console","log","componentDidMount","getEmployees","then","res","data","setItem","stringify","catch","err","render","minHeight","preventDefault"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useState } from \"react\";\nimport API from \"../utils/API\";\nimport Container from \"../components/Container\";\nimport SearchResults from \"../components/SearchResults\";\nimport SearchForm from \"../components/SearchForm\";\n\nclass Search extends Component {\n\n  state = {\n    search: \"\",\n    employee: [],\n    results: [],\n  };\n\n  componentDidMount() {\n    let storedEmployees = JSON.parse(localStorage.getItem(\"Employees\"));\n    if (storedEmployees != null) {\n        this.setState({ results: storedEmployees })\n    }\n    else{\n        API.getEmployees()\n        .then(res => {\n        this.setState({ results: res.data.results })\n        localStorage.setItem(\"Employees\", JSON.stringify(res.data.results))\n        })\n        .catch(err => console.log(err));}\n  }\n\n  handleInputChange = event => {\n    const value = event.target.value;\n    let storedEmployees = JSON.parse(localStorage.getItem(\"Employees\"));\n    let filteredEmployees = storedEmployees.filter(letter => letter.name.first.includes(value))\n    this.setState({ results: filteredEmployees });\n  };\n\n  sortEmployees = (a,b) => {\n    let storedEmployees = JSON.parse(localStorage.getItem(\"Employees\"));\n    const sorted = storedEmployees.sort((a, b) => b[storedEmployees.name.first] - a[storedEmployees.name.first]);\n    console.log(sorted);\n    this.setState({ results: sorted });\n    // const nameA = a.name.first.toUpperCase();\n    // const nameB = b.name.first.toUpperCase();\n    // let comparison = 0;\n    // if (nameA > nameB) {\n    // comparison = 1;\n    // } else if (nameA < nameB) {\n    // comparison = -1; \n    // }\n    // console.log(comparison)\n    // return comparison;\n  }\n\n// toggleSortFirstName = () =>{\n//     let newEmployeeList = JSON.parse(localStorage.getItem(\"Employees\"));\n//     console.log(newEmployeeList)\n//     this.setState({\n//         employeeListChanges: newEmployeeList.sort((a, b) => a.name.first > b.name.first)\n//     })\n//     localStorage.setItem(\"Employees\", JSON.stringify(newEmployeeList))\n// }\n\n  render() {\n    return (\n      <div>\n        <Container style={{ minHeight: \"80%\" }}>\n          <h1 className=\"text-center\">Employee Directory!</h1>\n          \n          <SearchForm\n            handleInputChange={this.handleInputChange}\n            employee={this.state.employee}\n          />\n            <tr>\n                <th>Photo</th>\n                <th onClick={event => {event.preventDefault(); this.sortEmployees('first');}}>\n                First Name\n                </th>\n                <th>Last Name</th>\n                <th>Gender</th>\n                <th>Email</th>\n            </tr>\n          <SearchResults results={this.state.results} />\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}