{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/felipeferreira/Documents/00 - coding/Employee-Directory/empdir/src/pages/Employees.js\";\nimport React, { Component, useEffect, useState } from \"react\";\nimport API from \"../utils/API\";\nimport Container from \"../components/Container\";\nimport SearchResults from \"../components/SearchResults\";\nimport SearchForm from \"../components/SearchForm\";\nlet employeeList = [];\n\nclass Search extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      search: \"\",\n      employee: [],\n      results: [],\n      error: \"\"\n    };\n\n    this.handleInputChange = event => {\n      const name = event.target.name;\n      const value = event.target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n\n  // When the component mounts, get a list of all available base breeds and update this.state.breeds\n  componentDidMount() {\n    console.log(employeeList);\n\n    if (employeeList !== null) {\n      this.setState({\n        results: employeeList\n      });\n    } else {\n      API.getEmployees().then(res => employeeList = res.data.results).then(res => this.setState({\n        results: res.data.results\n      })).catch(err => console.log(err));\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        style: {\n          minHeight: \"80%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center\",\n          children: \"Employee Directory!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SearchForm, {\n          handleInputChange: this.handleInputChange,\n          employee: this.state.employee\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SearchResults, {\n          results: this.state.results\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/felipeferreira/Documents/00 - coding/Employee-Directory/empdir/src/pages/Employees.js"],"names":["React","Component","useEffect","useState","API","Container","SearchResults","SearchForm","employeeList","Search","state","search","employee","results","error","handleInputChange","event","name","target","value","setState","componentDidMount","console","log","getEmployees","then","res","data","catch","err","render","minHeight"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,IAAIC,YAAY,GAAG,EAAnB;;AAEA,MAAMC,MAAN,SAAqBR,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC7BS,KAD6B,GACrB;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,QAAQ,EAAE,EAFJ;AAGNC,MAAAA,OAAO,EAAE,EAHH;AAINC,MAAAA,KAAK,EAAE;AAJD,KADqB;;AAAA,SAqB7BC,iBArB6B,GAqBTC,KAAK,IAAI;AAC3B,YAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaD,IAA1B;AACA,YAAME,KAAK,GAAGH,KAAK,CAACE,MAAN,CAAaC,KAA3B;AACA,WAAKC,QAAL,CAAc;AACZ,SAACH,IAAD,GAAQE;AADI,OAAd;AAGD,KA3B4B;AAAA;;AAO7B;AACEE,EAAAA,iBAAiB,GAAG;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAYf,YAAZ;;AACA,QAAGA,YAAY,KAAK,IAApB,EAAyB;AACrB,WAAKY,QAAL,CAAc;AAAEP,QAAAA,OAAO,EAAEL;AAAX,OAAd;AACH,KAFD,MAGI;AACJJ,MAAAA,GAAG,CAACoB,YAAJ,GACGC,IADH,CACQC,GAAG,IAAIlB,YAAY,GAAGkB,GAAG,CAACC,IAAJ,CAASd,OADvC,EAEGY,IAFH,CAEQC,GAAG,IAAI,KAAKN,QAAL,CAAc;AAAEP,QAAAA,OAAO,EAAEa,GAAG,CAACC,IAAJ,CAASd;AAApB,OAAd,CAFf,EAGGe,KAHH,CAGSC,GAAG,IAAIP,OAAO,CAACC,GAAR,CAAYM,GAAZ,CAHhB;AAIC;AACF;;AAWDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE,QAAC,SAAD;AAAW,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAlB;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,UAAD;AACE,UAAA,iBAAiB,EAAE,KAAKhB,iBAD1B;AAEE,UAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWE;AAFvB;AAAA;AAAA;AAAA;AAAA,gBAFF,eAME,QAAC,aAAD;AAAe,UAAA,OAAO,EAAE,KAAKF,KAAL,CAAWG;AAAnC;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AA3C4B;;AA8C/B,eAAeJ,MAAf","sourcesContent":["import React, { Component, useEffect, useState } from \"react\";\nimport API from \"../utils/API\";\nimport Container from \"../components/Container\";\nimport SearchResults from \"../components/SearchResults\";\nimport SearchForm from \"../components/SearchForm\";\nlet employeeList = []\n\nclass Search extends Component {\n  state = {\n    search: \"\",\n    employee: [],\n    results: [],\n    error: \"\"\n  };\n  // When the component mounts, get a list of all available base breeds and update this.state.breeds\n    componentDidMount() {\n    console.log(employeeList)\n    if(employeeList !== null){\n        this.setState({ results: employeeList })\n    }\n    else{\n    API.getEmployees()\n      .then(res => employeeList = res.data.results )\n      .then(res => this.setState({ results: res.data.results }))\n      .catch(err => console.log(err));\n    }\n  }\n\n  handleInputChange = event => {\n    const name = event.target.name;\n    const value = event.target.value;\n    this.setState({\n      [name]: value\n    });\n  };\n\n\n  render() {\n    return (\n      <div>\n        <Container style={{ minHeight: \"80%\" }}>\n          <h1 className=\"text-center\">Employee Directory!</h1>\n          <SearchForm\n            handleInputChange={this.handleInputChange}\n            employee={this.state.employee}\n          />\n          <SearchResults results={this.state.results} />\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}