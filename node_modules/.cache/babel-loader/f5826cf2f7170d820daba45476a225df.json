{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/felipeferreira/Documents/00 - coding/ResponsiveContacts/src/components/SearchResults/index.js\";\n// import React from \"react\";\n// import \"./style.css\";\n// function SearchResults(props) {\n//   return (\n//     <table>\n//       <tr>\n//           <th>\n//           Name\n//           </th>\n//           <th>Phone</th>\n//           <th>Email</th>\n//           <th>Company</th>\n//       </tr>\n//       {props.results.map(result => (\n//       <tr>\n//         <td>\n//           <span>{result.name}</span>\n//         </td>\n//         <td>\n//           <span>{result.phone}</span>\n//         </td>\n//         <td>\n//           <span>{result.email}</span>\n//         </td>\n//         <td>\n//           <span>{result.company.name}</span>\n//         </td>\n//       </tr>\n//       ))}\n//     </table>\n//   );\n// }\n// export default SearchResults;\n/////////////////////////////////////////////////////////////////////////////\n// import React from 'react';\n// import 'antd/dist/antd.css';\n// import './style.css';\n// import { Table } from 'antd';\n// function SearchResults(props) {\n// const columns = [\n//   {\n//     title: 'Name',\n//     dataIndex: 'name',\n//     sorter: {\n//       compare: (a, b) => a.name - b.name,\n//       multiple: 4,\n//     },\n//   },\n//   {\n//     title: 'Phone',\n//     dataIndex: 'phone',\n//     sorter: {\n//       compare: (a, b) => a.phone - b.phone,\n//       multiple: 3,\n//     },\n//   },\n//   {\n//     title: 'Email',\n//     dataIndex: 'email',\n//     sorter: {\n//       compare: (a, b) => a.email - b.email,\n//       multiple: 2,\n//     },\n//   },\n//   {\n//     title: 'Company',\n//     dataIndex: 'company',\n//     sorter: {\n//       compare: (a, b) => a.company - b.company,\n//       multiple: 1,\n//     },\n//   },\n// ];\n// const data = \n// props.results.map(result => (\n//  {\n//     name: result.name,\n//     phone: result.phone,\n//     email: result.email,\n//     company: result.company.name,\n//   }\n// ));\n// console.log(data)\n// function onChange(pagination, filters, sorter, extra) {\n//   console.log('params', pagination, filters, sorter, extra);\n// }\n// return (\n//   <Table columns={columns} dataSource={data} onChange={onChange} />\n// );\n// }\n// export default SearchResults;\n///////////////////////////////////////////////////////////////////////\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { Table } from 'antd';\nconst columns = [{\n  title: 'Name',\n  dataIndex: 'name',\n  sorter: {\n    compare: (a, b) => a.name - b.name,\n    multiple: 4\n  }\n}, {\n  title: 'Phone',\n  dataIndex: 'phone',\n  sorter: {\n    compare: (a, b) => a.phone - b.phone,\n    multiple: 3\n  }\n}, {\n  title: 'Email',\n  dataIndex: 'email',\n  sorter: {\n    compare: (a, b) => a.email - b.email,\n    multiple: 2\n  }\n}, {\n  title: 'Company',\n  dataIndex: 'company',\n  sorter: {\n    compare: (a, b) => a.company - b.company,\n    multiple: 1\n  }\n}];\n\nconst data = props => {\n  props.results.map(result => ({\n    name: result.name,\n    phone: result.phone,\n    email: result.email,\n    company: result.company.name\n  }));\n};\n\nfunction onChange(pagination, filters, sorter, extra) {\n  console.log('params', pagination, filters, sorter, extra);\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Table, {\n  columns: columns,\n  dataSource: data,\n  onChange: onChange\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 164,\n  columnNumber: 17\n}, this));","map":{"version":3,"sources":["/Users/felipeferreira/Documents/00 - coding/ResponsiveContacts/src/components/SearchResults/index.js"],"names":["React","ReactDOM","Table","columns","title","dataIndex","sorter","compare","a","b","name","multiple","phone","email","company","data","props","results","map","result","onChange","pagination","filters","extra","console","log","render"],"mappings":"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","sourcesContent":["// import React from \"react\";\n// import \"./style.css\";\n\n// function SearchResults(props) {\n//   return (\n//     <table>\n//       <tr>\n//           <th>\n//           Name\n//           </th>\n//           <th>Phone</th>\n//           <th>Email</th>\n//           <th>Company</th>\n//       </tr>\n//       {props.results.map(result => (\n//       <tr>\n//         <td>\n//           <span>{result.name}</span>\n//         </td>\n//         <td>\n//           <span>{result.phone}</span>\n//         </td>\n//         <td>\n//           <span>{result.email}</span>\n//         </td>\n//         <td>\n//           <span>{result.company.name}</span>\n//         </td>\n//       </tr>\n//       ))}\n//     </table>\n//   );\n// }\n\n// export default SearchResults;\n\n\n/////////////////////////////////////////////////////////////////////////////\n\n// import React from 'react';\n// import 'antd/dist/antd.css';\n// import './style.css';\n// import { Table } from 'antd';\n\n\n// function SearchResults(props) {\n// const columns = [\n//   {\n//     title: 'Name',\n//     dataIndex: 'name',\n//     sorter: {\n//       compare: (a, b) => a.name - b.name,\n//       multiple: 4,\n//     },\n//   },\n//   {\n//     title: 'Phone',\n//     dataIndex: 'phone',\n//     sorter: {\n//       compare: (a, b) => a.phone - b.phone,\n//       multiple: 3,\n//     },\n//   },\n//   {\n//     title: 'Email',\n//     dataIndex: 'email',\n//     sorter: {\n//       compare: (a, b) => a.email - b.email,\n//       multiple: 2,\n//     },\n//   },\n//   {\n//     title: 'Company',\n//     dataIndex: 'company',\n//     sorter: {\n//       compare: (a, b) => a.company - b.company,\n//       multiple: 1,\n//     },\n//   },\n// ];\n\n// const data = \n// props.results.map(result => (\n//  {\n//     name: result.name,\n//     phone: result.phone,\n//     email: result.email,\n//     company: result.company.name,\n//   }\n\n// ));\n// console.log(data)\n\n// function onChange(pagination, filters, sorter, extra) {\n//   console.log('params', pagination, filters, sorter, extra);\n// }\n// return (\n//   <Table columns={columns} dataSource={data} onChange={onChange} />\n// );\n// }\n\n// export default SearchResults;\n\n\n\n///////////////////////////////////////////////////////////////////////\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { Table } from 'antd';\n\nconst columns = [\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      sorter: {\n        compare: (a, b) => a.name - b.name,\n        multiple: 4,\n      },\n    },\n    {\n      title: 'Phone',\n      dataIndex: 'phone',\n      sorter: {\n        compare: (a, b) => a.phone - b.phone,\n        multiple: 3,\n      },\n    },\n    {\n      title: 'Email',\n      dataIndex: 'email',\n      sorter: {\n        compare: (a, b) => a.email - b.email,\n        multiple: 2,\n      },\n    },\n    {\n      title: 'Company',\n      dataIndex: 'company',\n      sorter: {\n        compare: (a, b) => a.company - b.company,\n        multiple: 1,\n      },\n    },\n  ];\n\nconst data = (props) =>{\n  props.results.map(result => (\n  {\n      name: result.name,\n      phone: result.phone,\n      email: result.email,\n      company: result.company.name,\n    }\n\n  ));\n}\nfunction onChange(pagination, filters, sorter, extra) {\n  console.log('params', pagination, filters, sorter, extra);\n}\n\nReactDOM.render(<Table columns={columns} dataSource={data} onChange={onChange} />);"]},"metadata":{},"sourceType":"module"}