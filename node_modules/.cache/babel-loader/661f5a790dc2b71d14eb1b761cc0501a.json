{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/felipeferreira/Documents/00 - coding/homework/ResponsiveContacts/src/pages/Contacts.js\";\nimport React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport Container from \"../components/Container\";\nimport SearchResults from \"../components/SearchResults\";\nimport SearchForm from \"../components/SearchForm\";\n\nclass Search extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      search: \"\",\n      contact: [],\n      results: []\n    };\n\n    this.handleInputChange = event => {\n      const value = event.target.value;\n      let storedContacts = JSON.parse(localStorage.getItem(\"Contacts\"));\n      let filteredContacts = storedContacts.filter(letter => letter.name.includes(value));\n      this.setState({\n        results: filteredContacts\n      });\n    };\n  }\n\n  //checking if the contacts was retrieved from the api, if not, call the api and store in local storage\n  componentDidMount() {\n    let storedContacts = JSON.parse(localStorage.getItem(\"Contacts\"));\n\n    if (storedContacts != null) {\n      this.setState({\n        results: storedContacts\n      });\n    } else {\n      API.getContacts().then(res => {\n        console.log(res.data);\n        this.setState({\n          results: res.data\n        });\n        localStorage.setItem(\"Contacts\", JSON.stringify(res.data));\n      }).catch(err => console.log(err));\n    }\n  } //filter contacts\n\n\n  //Render on the screen\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        style: {\n          minHeight: \"80%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center\",\n          children: \"My Contacts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SearchForm, {\n          handleInputChange: this.handleInputChange,\n          contact: this.state.contact\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SearchResults, {\n          results: this.state.results\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/felipeferreira/Documents/00 - coding/homework/ResponsiveContacts/src/pages/Contacts.js"],"names":["React","Component","API","Container","SearchResults","SearchForm","Search","state","search","contact","results","handleInputChange","event","value","target","storedContacts","JSON","parse","localStorage","getItem","filteredContacts","filter","letter","name","includes","setState","componentDidMount","getContacts","then","res","console","log","data","setItem","stringify","catch","err","render","minHeight"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AAEA,MAAMC,MAAN,SAAqBL,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC7BM,KAD6B,GACrB;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,OAAO,EAAE,EAFH;AAGNC,MAAAA,OAAO,EAAE;AAHH,KADqB;;AAAA,SAuB7BC,iBAvB6B,GAuBTC,KAAK,IAAI;AAC3B,YAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAA3B;AACA,UAAIE,cAAc,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAArB;AACA,UAAIC,gBAAgB,GAAGL,cAAc,CAACM,MAAf,CAAsBC,MAAM,IAAIA,MAAM,CAACC,IAAP,CAAYC,QAAZ,CAAqBX,KAArB,CAAhC,CAAvB;AACA,WAAKY,QAAL,CAAc;AAAEf,QAAAA,OAAO,EAAEU;AAAX,OAAd;AACD,KA5B4B;AAAA;;AAM/B;AACEM,EAAAA,iBAAiB,GAAG;AAClB,QAAIX,cAAc,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAArB;;AACA,QAAIJ,cAAc,IAAI,IAAtB,EAA4B;AACxB,WAAKU,QAAL,CAAc;AAAEf,QAAAA,OAAO,EAAEK;AAAX,OAAd;AACH,KAFD,MAGI;AACAb,MAAAA,GAAG,CAACyB,WAAJ,GACCC,IADD,CACMC,GAAG,IAAI;AACbC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACA,aAAKP,QAAL,CAAc;AAAEf,UAAAA,OAAO,EAAEmB,GAAG,CAACG;AAAf,SAAd;AACAd,QAAAA,YAAY,CAACe,OAAb,CAAqB,UAArB,EAAiCjB,IAAI,CAACkB,SAAL,CAAeL,GAAG,CAACG,IAAnB,CAAjC;AACC,OALD,EAMCG,KAND,CAMOC,GAAG,IAAIN,OAAO,CAACC,GAAR,CAAYK,GAAZ,CANd;AAMiC;AACtC,GApB4B,CAsB7B;;;AAOF;AACEC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE,QAAC,SAAD;AAAW,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAlB;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,UAAD;AACE,UAAA,iBAAiB,EAAE,KAAK3B,iBAD1B;AAEE,UAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWE;AAFtB;AAAA;AAAA;AAAA;AAAA,gBAFF,eAOI,QAAC,aAAD;AAAe,UAAA,OAAO,EAAE,KAAKF,KAAL,CAAWG;AAAnC;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AA5C4B;;AA+C/B,eAAeJ,MAAf","sourcesContent":["import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport Container from \"../components/Container\";\nimport SearchResults from \"../components/SearchResults\";\nimport SearchForm from \"../components/SearchForm\";\n\nclass Search extends Component {\n  state = {\n    search: \"\",\n    contact: [],\n    results: [],\n  };\n//checking if the contacts was retrieved from the api, if not, call the api and store in local storage\n  componentDidMount() {\n    let storedContacts = JSON.parse(localStorage.getItem(\"Contacts\"));\n    if (storedContacts != null) {\n        this.setState({ results: storedContacts })\n    }\n    else{\n        API.getContacts()\n        .then(res => {\n        console.log(res.data)\n        this.setState({ results: res.data })\n        localStorage.setItem(\"Contacts\", JSON.stringify(res.data))\n        })\n        .catch(err => console.log(err));}\n  }\n\n  //filter contacts\n  handleInputChange = event => {\n    const value = event.target.value;\n    let storedContacts = JSON.parse(localStorage.getItem(\"Contacts\"));\n    let filteredContacts = storedContacts.filter(letter => letter.name.includes(value))\n    this.setState({ results: filteredContacts });\n  };\n//Render on the screen\n  render() {\n    return (\n      <div>\n        <Container style={{ minHeight: \"80%\" }}>\n          <h1 className=\"text-center\">My Contacts</h1>\n          <SearchForm\n            handleInputChange={this.handleInputChange}\n            contact={this.state.contact}\n          />\n          {/* <button type=\"button\" class=\"btn btn-dark\" onClick={event => {event.preventDefault(); this.sortContacts();}}>Order by Name</button> */}\n            <SearchResults results={this.state.results}/>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}