{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";// import React from \"react\";\n// import \"./style.css\";\n// function SearchResults(props) {\n//   return (\n//     <table>\n//       <tr>\n//           <th>\n//           Name\n//           </th>\n//           <th>Phone</th>\n//           <th>Email</th>\n//           <th>Company</th>\n//       </tr>\n//       {props.results.map(result => (\n//       <tr>\n//         <td>\n//           <span>{result.name}</span>\n//         </td>\n//         <td>\n//           <span>{result.phone}</span>\n//         </td>\n//         <td>\n//           <span>{result.email}</span>\n//         </td>\n//         <td>\n//           <span>{result.company.name}</span>\n//         </td>\n//       </tr>\n//       ))}\n//     </table>\n//   );\n// }\n// export default SearchResults;\n/////////////////////////////////////////////////////////////////////////////\nimport React from'react';import'antd/dist/antd.css';import'./style.css';import{Table}from'antd';function SearchResults(props){var columns=[{title:'Name',dataIndex:'name',sorter:function sorter(a,b){return a.name.length-b.name.length;},sortDirections:['descend','ascend']},{title:'Phone',dataIndex:'phone'},{title:'Email',dataIndex:'email'},{title:'Company',dataIndex:'company',sorter:function sorter(a,b){return a.company.length-b.company.length;},sortDirections:['descend','ascend']}];var data=props.results.map(function(result){return{key:result.id,name:result.name,phone:result.phone,email:result.email,company:result.company.name};});console.log(data);function onChange(pagination,filters,sorter,extra){console.log('params',pagination,filters,sorter,extra);}return/*#__PURE__*/_jsx(Table,{columns:columns,dataSource:data,onChange:onChange});}export default SearchResults;///////////////////////////////////////////////////////////////////////","map":{"version":3,"sources":["/Users/felipeferreira/Documents/00 - coding/homework/ResponsiveContacts/src/components/SearchResults/index.js"],"names":["React","Table","SearchResults","props","columns","title","dataIndex","sorter","a","b","name","length","sortDirections","company","data","results","map","result","key","id","phone","email","console","log","onChange","pagination","filters","extra"],"mappings":"2CAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAEA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,oBAAP,CACA,MAAO,aAAP,CACA,OAASC,KAAT,KAAsB,MAAtB,CAGA,QAASC,CAAAA,aAAT,CAAuBC,KAAvB,CAA8B,CAC9B,GAAMC,CAAAA,OAAO,CAAG,CACd,CACEC,KAAK,CAAE,MADT,CAEEC,SAAS,CAAE,MAFb,CAGEC,MAAM,CAAE,gBAACC,CAAD,CAAIC,CAAJ,QAAUD,CAAAA,CAAC,CAACE,IAAF,CAAOC,MAAP,CAAgBF,CAAC,CAACC,IAAF,CAAOC,MAAjC,EAHV,CAIEC,cAAc,CAAE,CAAC,SAAD,CAAY,QAAZ,CAJlB,CADc,CAOd,CACEP,KAAK,CAAE,OADT,CAEEC,SAAS,CAAE,OAFb,CAPc,CAWd,CACED,KAAK,CAAE,OADT,CAEEC,SAAS,CAAE,OAFb,CAXc,CAed,CACED,KAAK,CAAE,SADT,CAEEC,SAAS,CAAE,SAFb,CAGEC,MAAM,CAAE,gBAACC,CAAD,CAAIC,CAAJ,QAAUD,CAAAA,CAAC,CAACK,OAAF,CAAUF,MAAV,CAAmBF,CAAC,CAACI,OAAF,CAAUF,MAAvC,EAHV,CAIEC,cAAc,CAAE,CAAC,SAAD,CAAY,QAAZ,CAJlB,CAfc,CAAhB,CAuBA,GAAME,CAAAA,IAAI,CACVX,KAAK,CAACY,OAAN,CAAcC,GAAd,CAAkB,SAAAC,MAAM,QACvB,CACGC,GAAG,CAAED,MAAM,CAACE,EADf,CAEGT,IAAI,CAAEO,MAAM,CAACP,IAFhB,CAGGU,KAAK,CAAEH,MAAM,CAACG,KAHjB,CAIGC,KAAK,CAAEJ,MAAM,CAACI,KAJjB,CAKGR,OAAO,CAAEI,MAAM,CAACJ,OAAP,CAAeH,IAL3B,CADuB,EAAxB,CADA,CAUAY,OAAO,CAACC,GAAR,CAAYT,IAAZ,EAEA,QAASU,CAAAA,QAAT,CAAkBC,UAAlB,CAA8BC,OAA9B,CAAuCnB,MAAvC,CAA+CoB,KAA/C,CAAsD,CACpDL,OAAO,CAACC,GAAR,CAAY,QAAZ,CAAsBE,UAAtB,CAAkCC,OAAlC,CAA2CnB,MAA3C,CAAmDoB,KAAnD,EACD,CACD,mBACE,KAAC,KAAD,EAAO,OAAO,CAAEvB,OAAhB,CAAyB,UAAU,CAAEU,IAArC,CAA2C,QAAQ,CAAEU,QAArD,EADF,CAGC,CAED,cAAetB,CAAAA,aAAf,CAIA","sourcesContent":["// import React from \"react\";\n// import \"./style.css\";\n\n// function SearchResults(props) {\n//   return (\n//     <table>\n//       <tr>\n//           <th>\n//           Name\n//           </th>\n//           <th>Phone</th>\n//           <th>Email</th>\n//           <th>Company</th>\n//       </tr>\n//       {props.results.map(result => (\n//       <tr>\n//         <td>\n//           <span>{result.name}</span>\n//         </td>\n//         <td>\n//           <span>{result.phone}</span>\n//         </td>\n//         <td>\n//           <span>{result.email}</span>\n//         </td>\n//         <td>\n//           <span>{result.company.name}</span>\n//         </td>\n//       </tr>\n//       ))}\n//     </table>\n//   );\n// }\n\n// export default SearchResults;\n\n\n/////////////////////////////////////////////////////////////////////////////\n\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport './style.css';\nimport { Table } from 'antd';\n\n\nfunction SearchResults(props) {\nconst columns = [\n  {\n    title: 'Name',\n    dataIndex: 'name',\n    sorter: (a, b) => a.name.length - b.name.length,\n    sortDirections: ['descend', 'ascend'],\n  },\n  {\n    title: 'Phone',\n    dataIndex: 'phone',\n  },\n  {\n    title: 'Email',\n    dataIndex: 'email',\n  },\n  {\n    title: 'Company',\n    dataIndex: 'company',\n    sorter: (a, b) => a.company.length - b.company.length,\n    sortDirections: ['descend', 'ascend'],\n  },\n];\n\nconst data = \nprops.results.map(result => (\n {\n    key: result.id,\n    name: result.name,\n    phone: result.phone,\n    email: result.email,\n    company: result.company.name,\n  }\n));\nconsole.log(data)\n\nfunction onChange(pagination, filters, sorter, extra) {\n  console.log('params', pagination, filters, sorter, extra);\n}\nreturn (\n  <Table columns={columns} dataSource={data} onChange={onChange} />\n);\n}\n\nexport default SearchResults;\n\n\n\n///////////////////////////////////////////////////////////////////////\n"]},"metadata":{},"sourceType":"module"}