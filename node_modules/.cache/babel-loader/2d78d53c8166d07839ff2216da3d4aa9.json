{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/felipeferreira/Documents/00 - coding/ResponsiveContacts/src/components/SearchResults/index.js\";\n// import React from \"react\";\n// import \"./style.css\";\n// function SearchResults(props) {\n//   return (\n//     <table>\n//       <tr>\n//           <th>\n//           Name\n//           </th>\n//           <th>Phone</th>\n//           <th>Email</th>\n//           <th>Company</th>\n//       </tr>\n//       {props.results.map(result => (\n//       <tr>\n//         <td>\n//           <span>{result.name}</span>\n//         </td>\n//         <td>\n//           <span>{result.phone}</span>\n//         </td>\n//         <td>\n//           <span>{result.email}</span>\n//         </td>\n//         <td>\n//           <span>{result.company.name}</span>\n//         </td>\n//       </tr>\n//       ))}\n//     </table>\n//   );\n// }\n// export default SearchResults;\n/////////////////////////////////////////////////////////////////////////////\n// import React from 'react';\n// import 'antd/dist/antd.css';\n// import './style.css';\n// import { Table } from 'antd';\n// function SearchResults(props) {\n// const columns = [\n//   {\n//     title: 'Name',\n//     dataIndex: 'name',\n//     sorter: {\n//       compare: (a, b) => a.name - b.name,\n//       multiple: 4,\n//     },\n//   },\n//   {\n//     title: 'Phone',\n//     dataIndex: 'phone',\n//     sorter: {\n//       compare: (a, b) => a.phone - b.phone,\n//       multiple: 3,\n//     },\n//   },\n//   {\n//     title: 'Email',\n//     dataIndex: 'email',\n//     sorter: {\n//       compare: (a, b) => a.email - b.email,\n//       multiple: 2,\n//     },\n//   },\n//   {\n//     title: 'Company',\n//     dataIndex: 'company',\n//     sorter: {\n//       compare: (a, b) => a.company - b.company,\n//       multiple: 1,\n//     },\n//   },\n// ];\n// const data = \n// props.results.map(result => (\n//  {\n//     name: result.name,\n//     phone: result.phone,\n//     email: result.email,\n//     company: result.company.name,\n//   }\n// ));\n// console.log(data)\n// function onChange(pagination, filters, sorter, extra) {\n//   console.log('params', pagination, filters, sorter, extra);\n// }\n// return (\n//   <Table columns={columns} dataSource={data} onChange={onChange} />\n// );\n// }\n// export default SearchResults;\n///////////////////////////////////////////////////////////////////////\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { Table } from 'antd';\nconst columns = [{\n  title: 'Name',\n  dataIndex: 'name'\n}, {\n  title: 'Chinese Score',\n  dataIndex: 'chinese',\n  sorter: {\n    compare: (a, b) => a.chinese - b.chinese,\n    multiple: 3\n  }\n}, {\n  title: 'Math Score',\n  dataIndex: 'math',\n  sorter: {\n    compare: (a, b) => a.math - b.math,\n    multiple: 2\n  }\n}, {\n  title: 'English Score',\n  dataIndex: 'english',\n  sorter: {\n    compare: (a, b) => a.english - b.english,\n    multiple: 1\n  }\n}];\nconst data = [{\n  key: '1',\n  name: 'John Brown',\n  chinese: 98,\n  math: 60,\n  english: 70\n}, {\n  key: '2',\n  name: 'Jim Green',\n  chinese: 98,\n  math: 66,\n  english: 89\n}, {\n  key: '3',\n  name: 'Joe Black',\n  chinese: 98,\n  math: 90,\n  english: 70\n}, {\n  key: '4',\n  name: 'Jim Red',\n  chinese: 88,\n  math: 99,\n  english: 89\n}];\n\nfunction onChange(pagination, filters, sorter, extra) {\n  console.log('params', pagination, filters, sorter, extra);\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Table, {\n  columns: columns,\n  dataSource: data,\n  onChange: onChange\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 180,\n  columnNumber: 17\n}, this), document.getElementById('container'));","map":{"version":3,"sources":["/Users/felipeferreira/Documents/00 - coding/ResponsiveContacts/src/components/SearchResults/index.js"],"names":["React","ReactDOM","Table","columns","title","dataIndex","sorter","compare","a","b","chinese","multiple","math","english","data","key","name","onChange","pagination","filters","extra","console","log","render","document","getElementById"],"mappings":"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","sourcesContent":["// import React from \"react\";\n// import \"./style.css\";\n\n// function SearchResults(props) {\n//   return (\n//     <table>\n//       <tr>\n//           <th>\n//           Name\n//           </th>\n//           <th>Phone</th>\n//           <th>Email</th>\n//           <th>Company</th>\n//       </tr>\n//       {props.results.map(result => (\n//       <tr>\n//         <td>\n//           <span>{result.name}</span>\n//         </td>\n//         <td>\n//           <span>{result.phone}</span>\n//         </td>\n//         <td>\n//           <span>{result.email}</span>\n//         </td>\n//         <td>\n//           <span>{result.company.name}</span>\n//         </td>\n//       </tr>\n//       ))}\n//     </table>\n//   );\n// }\n\n// export default SearchResults;\n\n\n/////////////////////////////////////////////////////////////////////////////\n\n// import React from 'react';\n// import 'antd/dist/antd.css';\n// import './style.css';\n// import { Table } from 'antd';\n\n\n// function SearchResults(props) {\n// const columns = [\n//   {\n//     title: 'Name',\n//     dataIndex: 'name',\n//     sorter: {\n//       compare: (a, b) => a.name - b.name,\n//       multiple: 4,\n//     },\n//   },\n//   {\n//     title: 'Phone',\n//     dataIndex: 'phone',\n//     sorter: {\n//       compare: (a, b) => a.phone - b.phone,\n//       multiple: 3,\n//     },\n//   },\n//   {\n//     title: 'Email',\n//     dataIndex: 'email',\n//     sorter: {\n//       compare: (a, b) => a.email - b.email,\n//       multiple: 2,\n//     },\n//   },\n//   {\n//     title: 'Company',\n//     dataIndex: 'company',\n//     sorter: {\n//       compare: (a, b) => a.company - b.company,\n//       multiple: 1,\n//     },\n//   },\n// ];\n\n// const data = \n// props.results.map(result => (\n//  {\n//     name: result.name,\n//     phone: result.phone,\n//     email: result.email,\n//     company: result.company.name,\n//   }\n\n// ));\n// console.log(data)\n\n// function onChange(pagination, filters, sorter, extra) {\n//   console.log('params', pagination, filters, sorter, extra);\n// }\n// return (\n//   <Table columns={columns} dataSource={data} onChange={onChange} />\n// );\n// }\n\n// export default SearchResults;\n\n\n\n///////////////////////////////////////////////////////////////////////\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { Table } from 'antd';\n\nconst columns = [\n  {\n    title: 'Name',\n    dataIndex: 'name',\n  },\n  {\n    title: 'Chinese Score',\n    dataIndex: 'chinese',\n    sorter: {\n      compare: (a, b) => a.chinese - b.chinese,\n      multiple: 3,\n    },\n  },\n  {\n    title: 'Math Score',\n    dataIndex: 'math',\n    sorter: {\n      compare: (a, b) => a.math - b.math,\n      multiple: 2,\n    },\n  },\n  {\n    title: 'English Score',\n    dataIndex: 'english',\n    sorter: {\n      compare: (a, b) => a.english - b.english,\n      multiple: 1,\n    },\n  },\n];\n\nconst data = [\n  {\n    key: '1',\n    name: 'John Brown',\n    chinese: 98,\n    math: 60,\n    english: 70,\n  },\n  {\n    key: '2',\n    name: 'Jim Green',\n    chinese: 98,\n    math: 66,\n    english: 89,\n  },\n  {\n    key: '3',\n    name: 'Joe Black',\n    chinese: 98,\n    math: 90,\n    english: 70,\n  },\n  {\n    key: '4',\n    name: 'Jim Red',\n    chinese: 88,\n    math: 99,\n    english: 89,\n  },\n];\n\nfunction onChange(pagination, filters, sorter, extra) {\n  console.log('params', pagination, filters, sorter, extra);\n}\n\nReactDOM.render(<Table columns={columns} dataSource={data} onChange={onChange} />, document.getElementById('container'));"]},"metadata":{},"sourceType":"module"}